{
	"type": "array",
	"description": "Style applied to a group, e.g. all nodes, all edges, nodes in a certain class or a single node, etc. Each element is CSS-like, See https://js.cytoscape.org/#style",
	"items": {
		"type": "object",
		"required": ["selector", "style"],
		"additionalProperties": false,
		"properties": {
			"selector": {
				"type": "string",
				"description": "Where to apply the style element, common inputs are *node* or *edge*, Also takes in css selector, e.g. *.foo* to apply to all edges and nodes of class *foo*, #foo (or [id=\"foo\"]) for node or edge of with id foo. See https://js.cytoscape.org/#selectors/notes-amp-caveats"
			},
			"style": {
				"type": "object",
				"description": "Specify the styles",
				"properties": {
					"width": {
						"type": "number",
						"description": "The width of the node\u2019s body or the width of an edge\u2019s line."
					},
					"height": {
						"type": "number",
						"description": "The height of the node\u2019s body"
					},
					"shape": {
						"type": "string",
						"description": "The shape of the node\u2019s body. Note that each shape fits within the specified width and height, and so you may have to adjust width and height if you desire an equilateral shape (i.e. width !== height for several equilateral shapes)",
						"enum": [
							"ellipse",
							"triangle",
							"round-triangle",
							"rectangle",
							"round-rectangle",
							"bottom-round-rectangle",
							"cut-rectangle",
							"barrel",
							"rhomboid",
							"diamond",
							"round-diamond",
							"pentagon",
							"round-pentagon",
							"hexagon",
							"round-hexagon",
							"concave-hexagon",
							"heptagon",
							"round-heptagon",
							"octagon",
							"round-octagon",
							"star",
							"tag",
							"round-tag",
							"vee"
						]
					},
					"background-color": {
						"type": "string",
						"description": "The colour of the node\u2019s body. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"background-blacken": {
						"type": "number",
						"description": "Blackens the node\u2019s body for values from 0 to 1; whitens the node\u2019s body for values from 0 to -1.",
						"maximum": 1,
						"minimum": -1
					},
					"background-opacity": {
						"type": "number",
						"description": "The opacity level of the node\u2019s background colour",
						"maximum": 1,
						"minimum": 0
					},
					"border-width": {
						"type": "number",
						"description": "The size of the node\u2019s border.",
						"minimum": 0
					},
					"border-style": {
						"type": "string",
						"description": "The style of the node\u2019s border",
						"enum": ["solid", "dotted", "dashed", "double"]
					},
					"border-color": {
						"type": "string",
						"description": "The colour of the node\u2019s border. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"border-opacity": {
						"type": "number",
						"description": "The opacity of the node\u2019s border",
						"minimum": 0,
						"maximum": 1
					},
					"padding": {
						"type": "number",
						"description": "The amount of padding around all sides of the node.",
						"minimum": 0
					},
					"curve-style": {
						"type": "string",
						"description": "The curving method used to separate two or more edges between two nodes; may be haystack (very fast, bundled straight edges for which loops and compounds are unsupported), straight (straight edges with all arrows supported), bezier (bundled curved edges), unbundled-bezier (curved edges for use with manual control points), segments (a series of straight lines), taxi (right-angled lines, hierarchically bundled). Note that haystack edges work best with ellipse, rectangle, or similar nodes. Smaller node shapes, like triangle, will not be as aesthetically pleasing. Also note that edge endpoint arrows are unsupported for haystack edges.",
						"default": "straight",
						"enum": [
							"straight",
							"haystack",
							"bezier",
							"unbundled-bezier",
							"segments",
							"taxi"
						]
					},
					"line-color": {
						"type": "string",
						"description": "The colour of the edge\u2019s line. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"line-style": {
						"type": "string",
						"description": "The style of the edge\u2019s line.",
						"enum": ["solid", "dotted", "dashed"]
					},
					"line-cap": {
						"type": "string",
						"description": "The cap style of the edge\u2019s line; may be butt (default), round, or square. The cap may or may not be visible, depending on the shape of the node and the relative size of the node and edge. Caps other than butt extend beyond the specified endpoint of the edge.",
						"enum": ["butt", "round", "square"],
						"default": "butt"
					},
					"line-opacity": {
						"type": "number",
						"minimum": 0,
						"maximum": 1,
						"default": 1,
						"description": "The opacity of the edge\u2019s line and arrow. Useful if you wish to have a separate opacity for the edge label versus the edge line. Note that the opacity value of the edge element affects the effective opacity of its line and label subcomponents."
					},
					"target-arrow-color": {
						"type": "string",
						"description": "The colour of the edge\u2019s source arrow. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"target-arrow-shape": {
						"type": "string",
						"description": "The shape of the edge\u2019s source arrow",
						"enum": [
							"triangle",
							"triangle-tee",
							"circle-triangle",
							"triangle-cross",
							"triangle-backcurve",
							"vee",
							"tee",
							"square",
							"circle",
							"diamond",
							"chevron",
							"none"
						]
					},
					"target-arrow-fill": {
						"type": "string",
						"description": "The fill state of the edge\u2019s source arrow",
						"enum": ["filled", "hollow"]
					},
					"mid-target-arrow-color": {
						"type": "string",
						"description": "The colour of the edge\u2019s source arrow. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"mid-target-arrow-shape": {
						"type": "string",
						"description": "The shape of the edge\u2019s source arrow",
						"enum": [
							"triangle",
							"triangle-tee",
							"circle-triangle",
							"triangle-cross",
							"triangle-backcurve",
							"vee",
							"tee",
							"square",
							"circle",
							"diamond",
							"chevron",
							"none"
						]
					},
					"mid-target-arrow-fill": {
						"type": "string",
						"description": "The fill state of the edge\u2019s source arrow",
						"enum": ["filled", "hollow"]
					},
					"arrow-scale": {
						"type": "number",
						"description": "Scaling for the arrow size.",
						"minimum": 0
					},
					"opacity": {
						"type": "number",
						"description": "The opacity of the element. See https://js.cytoscape.org/#style/visibility",
						"minimum": 0,
						"maximum": 1
					},
					"z-index": {
						"type": "integer",
						"description": "An integer value that affects the relative draw order of elements. In general, an element with a higher z-index will be drawn on top of an element with a lower z-index. Note that edges are under nodes despite z-index."
					},
					"label": {
						"type": "string",
						"description": "The text to display for an element\u2019s label. Can give a path, e.g. data(id) will label with the elements id"
					},
					"source-label": {
						"type": "string",
						"description": "The text to display for an edge\u2019s source label. Can give a path, e.g. data(id) will label with the elements id"
					},
					"target-label": {
						"type": "string",
						"description": "The text to display for an edge\u2019s target label. Can give a path, e.g. data(id) will label with the elements id"
					},
					"color": {
						"type": "string",
						"description": "The color of the element's label. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"text-opacity": {
						"type": "number",
						"description": "The opacity of the label text, including its outline.",
						"minimum": 0,
						"maximum": 1
					},
					"font-family": {
						"type": "string",
						"description": "A comma-separated list of font names to use on the label text."
					},
					"font-size": {
						"type": "string",
						"description": "The size of the label text."
					},
					"font-style": {
						"type": "string",
						"description": "A CSS font style to be applied to the label text."
					},
					"font-weight": {
						"type": "string",
						"description": "A CSS font weight to be applied to the label text."
					},
					"text-transform": {
						"type": "string",
						"description": "A transformation to apply to the label text",
						"enum": ["none", "uppercase", "lowercase"]
					},
					"text-halign": {
						"type": "string",
						"description": "The horizontal alignment of a node\u2019s label",
						"enum": ["left", "center", "right"]
					},
					"text-valign": {
						"type": "string",
						"description": "The vertical alignment of a node\u2019s label",
						"enum": ["top", "center", "bottom"]
					},
					"ghost": {
						"type": "string",
						"description": "Whether to use the ghost effect, a semitransparent duplicate of the element drawn at an offset.",
						"default": "no",
						"enum": ["yes", "no"]
					},
					"active-bg-color": {
						"type": "string",
						"description": "The colour of the indicator shown when the background is grabbed by the user. Selector needs to be *core*. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"active-bg-opacity": {
						"type": "string",
						"description": " The opacity of the active background indicator. Selector needs to be *core*."
					},
					"active-bg-size": {
						"type": "string",
						"description": " The opacity of the active background indicator. Selector needs to be *core*."
					},
					"selection-box-color": {
						"type": "string",
						"description": "The background colour of the selection box used for drag selection. Selector needs to be *core*. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"selection-box-border-width": {
						"type": "number",
						"description": "The size of the border on the selection box. Selector needs to be *core*"
					},
					"selection-box-opacity": {
						"type": "number",
						"description": "The opacity of the selection box.  Selector needs to be *core*",
						"minimum": 0,
						"maximum": 1
					},
					"outside-texture-bg-color": {
						"type": "string",
						"description": "The colour of the area outside the viewport texture when initOptions.textureOnViewport === true.  Selector needs to be *core*. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%))."
					},
					"outside-texture-bg-opacity": {
						"type": "number",
						"description": "The opacity of the area outside the viewport texture. Selector needs to be *core*",
						"minimum": 0,
						"maximum": 1
					}
				}
			}
		}
	}
}
